name: Node js app deploy to EKS
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3.0
      with:
        version: 'v1.25.0' # default is latest stable
        install-metrics-apiserver: true      

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kube config
      run: aws eks update-kubeconfig --name test
    
    - name: Deploy to EKS
      run: kubectl apply -f webapp/  
 
    # - name: Install Helm
    #   uses: azure/setup-helm@v3
    #   with:
    #     version: 'v3.11.1'
    #     id: install
    # - name: Add Prometheus Helm repository
    #   run: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
    # - name: Install Prometheus with Helm
    #   run: |
    #     if ! kubectl get namespace monitoring > /dev/null 2>&1; then
    #       kubectl create namespace monitoring
    #     fi
    #     if ! helm list -n monitoring | grep prometheus > /dev/null 2>&1; then
    #       helm install prometheus prometheus-community/prometheus --namespace monitoring -f values.yaml
    #     fi
    #   continue-on-error: true    
    # - name: Expose Prometheus with a LoadBalancer
    #   run: kubectl apply -f prometheus-svc.yaml
    # - name: Add Grafana Helm Repository
    #   run: helm repo add grafana https://grafana.github.io/helm-charts
    # - name: Set Grafana admin password
    #   run: |
    #     if ! kubectl get namespace monitoring > /dev/null 2>&1; then
    #       kubectl create namespace monitoring
    #     fi
    #     if ! helm list -n monitoring | grep grafana > /dev/null 2>&1; then
    #       helm install grafana grafana/grafana --namespace monitoring --create-namespace --set adminPassword=${{ secrets.GRAFANA_ADMIN_PASSWORD }},persistence.enabled=false,persistence.type=emptyDir
    #     else
    #       helm upgrade grafana grafana/grafana --namespace monitoring --set adminPassword=${{ secrets.GRAFANA_ADMIN_PASSWORD }},persistence.enabled=false,persistence.type=emptyDir
    #     fi
    #   continue-on-error: true    
    # - name: Expose Grafana with a LoadBalancer
    #   run: kubectl apply -f grafana-svc.yaml
